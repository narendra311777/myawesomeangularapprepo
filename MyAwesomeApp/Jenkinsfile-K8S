node {
    
    def mvnHome = tool 'm2'
    
    stage ('Checkout') {    
       //checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'e2f1b466-b418-42ac-84a8-b6d6a5857928', url: 'https://github.com/narendra311777/myawesomeangularapprepo']]])   
        //stage('scm checkout'){
        git 'https://github.com/narendra311777/mycode.git'
    }
    
    stage ('build')  {
        sh "${mvnHome}/bin/mvn package -f MyAwesomeApp/pom.xml"
    } 
    
    stage ('Docker Build') {
     // Build and push image with Jenkins' docker-plugin
        withDockerRegistry([credentialsId: "docker", url: "https://index.docker.io/v1/"]) {
        image = docker.build("ananthkannan/myspringbootapp", "MyAwesomeApp")
        image.push()    
        }
      }
    }
    
    stage ('Kubernetes Deploy') {
        kubernetesDeploy(
            configs: 'MyAwesomeApp/springBootDeploy.yml',
            kubeconfigId: 'k8s',
            enableConfigSubstitution: true
            )
    }
    /*
        stage ('Kubernetes Deploy using Kubectl') {
          sh "kubectl apply -f MyAwesomeApp/springBootDeploy.yml"
    }*/
}
